{"remainingRequest":"E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\src\\components\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\src\\components\\ShopCart.vue","mtime":1555037338629},{"path":"E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\CL\\1_code\\project\\xz_vue\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      allcb: false\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    modifyItem: function modifyItem(e) {\n      //功能：如果用户选中商品，将当前商品对应对象 cb=true\n      //功能：如果用户未选中商品，将当前商品对应对象 cb=false\n      //1.获取当前元素选中状态\n      var cb = e.target.checked; //2.获取当前元素对应商品对象\n      //获得当前元素的下标\n\n      var i = e.target.dataset.i;\n      console.log(cb);\n      console.log(i); //3.修改商品对象的cb属性值\n\n      this.list[i].cb = cb; //4.修改全选状态 true false\n      //4.1如果完成 累加计算 \n\n      var count = 0; // 4.2创建变量count保存累加和\n      // 4.3创建循环遍历所有元素\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.cb) {\n            count++;\n          }\n        } // 4.4获取cb如果值等于true count++\n        // 4.5如果count个数与数组长度一致\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (count == this.list.length) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      } // 4.6将全选复选框选中\n      // 4.7否则清空全选复选框\n\n    },\n    removeSelect: function removeSelect() {\n      var _this = this;\n\n      // 1.显示确认框\n      this.$messagebox.confirm(\"是否删除选中商品\").then(function (action) {\n        //获取用户选中的商品\n        //创建变量保存删除商品的id\n        var ids = \"\"; //创建循环遍历数组，如果当前元素cb:true\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            if (item.cb) {\n              ids += item.id + \",\";\n            }\n          } //如果用户没有选中商品，停止删除操作\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (ids.length == 0) {\n          _this.$toast(\"快选\");\n\n          return;\n        } //如果用户选中多个商品1,2,3,去除后面\n\n\n        ids = ids.substring(0, ids.length - 1); //substring(?,?)截取字符串  起始位置 截取长度\n        //获取当前元素id拼接字符串\n\n        var url = \"http://127.0.0.1:3000/delM?ids=\" + ids;\n\n        _this.axios.get(url).then(function (result) {\n          _this.$toast(result.data.msg);\n\n          _this.loadMore();\n        });\n      }).catch(function (result) {});\n    },\n    selectAll: function selectAll(e) {\n      var cb = e.target.checked;\n      this.allcb = cb;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    delectCart: function delectCart(e) {\n      var _this2 = this;\n\n      //创建确认的消息框\n      this.$messagebox.confirm(\"是否删除\").then(function (action) {\n        var id = e.target.dataset.id;\n        var url = \"http://127.0.0.1:3000/removeCartItem?id=\" + id;\n\n        _this2.axios.get(url).then(function (result) {\n          if (result.data.code == 1) {\n            _this2.$toast(\"删除成功\");\n\n            _this2.loadMore();\n          } else {\n            _this2.$toast(\"删除失败\");\n          }\n        });\n      }).catch(function (result) {\n        _this2.$toast(\"取消删除\");\n      });\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      var url = \"http://127.0.0.1:3000/getCart\";\n      this.axios.get(url).then(function (result) {\n        if (result.data.code < 1) {\n          _this3.$toast(\"快登\");\n\n          return;\n        } //为数组元素添加属性cb\n        //cb标识复选框的状态\n\n\n        var rows = result.data.data; //创建循环遍历数组并且添加属性\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var item = _step4.value;\n            item.cb = false;\n          } //将添加结果后的数组赋值list\n\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        _this3.list = rows;\n      });\n    }\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-shop\">\r\n    <h1>购物车</h1>\r\n    <div class=\"mui-card\">\r\n      <div class=\"mui-card-header\">\r\n        <input type=\"checkbox\" @click=\"selectAll\" :checked=\"allcb\">\r\n        全选\r\n      </div>\r\n      <div class=\"mui-card-content\">\r\n        <div class=\"mui-card-content-inner\">\r\n          <ul class=\"mui-table-view\">\r\n            <li v-for=\"(item,i) of list\" :key=\"i\" class=\"mui-table-view-cell mui-media\">\r\n              <input type=\"checkbox\" :checked=\"item.cb\" @change=\"modifyItem\" :data-i=\"i\">\r\n              <a href=\"javascript:;\">\r\n                <img class=\"mui-media-object mui-pull-left\" src=\"img/menu1.png\">\r\n                <div class=\"mui-media-body\">\r\n                  <p class=\"mui-ellipsis\">\r\n                    <!-- 1.复选框-->\r\n                    <!-- 2.商品名称 -->\r\n                    {{item.lname}}\r\n                    <!-- 3.商品价格 -->\r\n                    {{item.price}}\r\n                    <!-- 4.删除按钮  -->\r\n                    <input type=\"button\" value=\"删除\" @click=\"delectCart\" :data-id=\"item.id\">  \r\n                  </p>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"mui-card-footer\">\r\n        <input type=\"button\" value=\"删除选中的商品\" @click=\"removeSelect\">\r\n        <input type=\"button\" value=\"结算\" >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],\r\n      allcb:false,\r\n    };\r\n  },\r\n  created() {\r\n    this.loadMore();\r\n  },\r\n  methods: {\r\n    modifyItem(e){\r\n      //功能：如果用户选中商品，将当前商品对应对象 cb=true\r\n      //功能：如果用户未选中商品，将当前商品对应对象 cb=false\r\n      //1.获取当前元素选中状态\r\n      var cb=e.target.checked;\r\n      //2.获取当前元素对应商品对象\r\n      //获得当前元素的下标\r\n      var i=e.target.dataset.i\r\n      console.log(cb)\r\n      console.log(i)\r\n      //3.修改商品对象的cb属性值\r\n      this.list[i].cb=cb;\r\n      //4.修改全选状态 true false\r\n      //4.1如果完成 累加计算 \r\n      var count=0;\r\n\r\n      // 4.2创建变量count保存累加和\r\n      // 4.3创建循环遍历所有元素\r\n      for(var item of this.list){\r\n        if(item.cb){\r\n          count++;\r\n        }\r\n      }\r\n      // 4.4获取cb如果值等于true count++\r\n      // 4.5如果count个数与数组长度一致\r\n      if(count==this.list.length){\r\n        this.allcb=true;\r\n      }else{\r\n         this.allcb=false; \r\n      }\r\n      // 4.6将全选复选框选中\r\n      // 4.7否则清空全选复选框\r\n     \r\n    },\r\n    removeSelect() {\r\n      // 1.显示确认框\r\n      this.$messagebox\r\n        .confirm(\"是否删除选中商品\")\r\n        .then(action => {\r\n          //获取用户选中的商品\r\n          //创建变量保存删除商品的id\r\n          var ids=\"\";\r\n          //创建循环遍历数组，如果当前元素cb:true\r\n          for(var item of this.list){\r\n            if(item.cb){\r\n              ids += item.id+\",\";\r\n            }\r\n          }\r\n          //如果用户没有选中商品，停止删除操作\r\n          if(ids.length==0){\r\n           this.$toast(\"快选\")\r\n           return;\r\n         }\r\n          //如果用户选中多个商品1,2,3,去除后面\r\n          ids=ids.substring(0,ids.length-1);\r\n          //substring(?,?)截取字符串  起始位置 截取长度\r\n          //获取当前元素id拼接字符串\r\n          var url = \"http://127.0.0.1:3000/delM?ids=\" + ids;\r\n          this.axios.get(url).then(result => {\r\n            this.$toast(result.data.msg)\r\n            this.loadMore();\r\n          });\r\n        })\r\n        .catch(result =>{});\r\n    },\r\n    selectAll(e){\r\n      var cb=e.target.checked;\r\n      this.allcb=cb;\r\n      for(var item of this.list){\r\n        item.cb=cb;\r\n      }\r\n    },\r\n    delectCart(e) {\r\n      //创建确认的消息框\r\n      this.$messagebox\r\n        .confirm(\"是否删除\")\r\n        .then(action => {\r\n          var id = e.target.dataset.id;\r\n          var url = \"http://127.0.0.1:3000/removeCartItem?id=\" + id;\r\n          this.axios.get(url).then(result => {\r\n            if (result.data.code == 1) {\r\n              this.$toast(\"删除成功\");\r\n              this.loadMore();\r\n            } else {\r\n              this.$toast(\"删除失败\");\r\n            }\r\n          });\r\n        })\r\n        .catch(result => {\r\n          this.$toast(\"取消删除\");\r\n        });\r\n    },\r\n    loadMore() {\r\n      var url = \"http://127.0.0.1:3000/getCart\";\r\n      this.axios.get(url).then(result => {\r\n        if(result.data.code<1){\r\n          this.$toast(\"快登\")\r\n          return;\r\n        }\r\n        //为数组元素添加属性cb\r\n        //cb标识复选框的状态\r\n        var rows = result.data.data;\r\n        //创建循环遍历数组并且添加属性\r\n        for (var item of rows) {\r\n          item.cb = false;\r\n        }\r\n        //将添加结果后的数组赋值list\r\n        this.list = rows;\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src\\components"}]}